// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.2 effective-4.1.50 (swiftlang-1103.0.32.1 clang-1103.0.32.29)
// swift-module-flags: -target x86_64-apple-macos10.10 -enable-objc-interop -enable-library-evolution -swift-version 4 -enforce-exclusivity=checked -O -module-name FirstCourseSecondTaskChecker
@_exported import FirstCourseSecondTaskChecker
import Foundation
import Swift
public class Checker {
  public init()
  public func checkFirstFunction(function: ([Swift.Int]) -> (Swift.Int, Swift.Int))
  public enum Color {
    case white
    case black
    case red
    case green
    case blue
    public static func == (a: FirstCourseSecondTaskChecker.Checker.Color, b: FirstCourseSecondTaskChecker.Checker.Color) -> Swift.Bool
    public var hashValue: Swift.Int {
      get
    }
    public func hash(into hasher: inout Swift.Hasher)
  }
  public struct Circle {
    public var radius: Swift.Double
    public var color: FirstCourseSecondTaskChecker.Checker.Color
    public init(radius: Swift.Double, color: FirstCourseSecondTaskChecker.Checker.Color)
  }
  public func checkSecondFunction(function: ([FirstCourseSecondTaskChecker.Checker.Circle]) -> [FirstCourseSecondTaskChecker.Checker.Circle])
  public struct Employee {
    public let fullName: Swift.String
    public let salary: Swift.String
    public let company: Swift.String
    public init(fullName: Swift.String, salary: Swift.String, company: Swift.String)
  }
  public typealias EmployeeData = [Swift.String : Swift.String]
  public func checkThirdFunction(function: ([FirstCourseSecondTaskChecker.Checker.EmployeeData]) -> [FirstCourseSecondTaskChecker.Checker.Employee])
  public func checkFourthFunction(function: ([Swift.String]) -> [Swift.String : [Swift.String]])
  @objc deinit
}
extension FirstCourseSecondTaskChecker.Checker.Color : Swift.Equatable {}
extension FirstCourseSecondTaskChecker.Checker.Color : Swift.Hashable {}
